============================================ 1 ==================================================

get_legals.py  : scrap html

formatter.py   : <p>.....</p> -> [{'เลขมาตรา': ['คำ', ...]}, {'เลขมาตรา': ['คำ', ...]}, ...]
                              -> law_with_words.pickle [ใช้ deepcut]
                              >> law_with_words.pickle

law_word_count.py   : count word in each law
                      [{'เลขมาตรา' : {'คำ': ความถี่, 'คำ': ความถี่, ...}},
                       {'เลขมาตรา' : {'คำ': ความถี่, 'คำ': ความถี่, ...}},
                       {...}] >> law_words_count.pickle

============================================= 2 =================================================

tf_generator.py     : เอาความถี่ ไปหารความยาวของแต่ละมาตรา >> law_words_tf.pickle

idf_generator.py    : เอาจำนวนมาตราทั้งหมด หารด้วยจำนวนคำที่มีมาตรานั้นๆ จะได้ idf ของคำๆ นั้น 
                      >> words_and_freq.pickle
                      >> law_words_idf.pickle

============================================ NOTE ===============================================

*** ความถี่ต่ำมาก
    คำที่เกิดกับทุก doc

list คำที่ความถี่ต่ำออกมาก่อน
แบบแรกดู similarity
พูดหัวข้อ, scope, ทำไมถึงทำ

============================================= 3 =================================================

::remove stop words >>>> low idf

*** vector representation ของแต่ละมาตรา >> ค่าข้างในเป็น tfidf
*** vector representation ของแต่ละสำนวน >> ค่าข้างในเป็น tfidf
แล้วหา cosine similarity

=========================================== PICKLE ==============================================

law_words_count.pickle  : [{'เลขมาตรา' : {'คำ': ความถี่, 'คำ': ความถี่, ...}},
                           {'เลขมาตรา' : {'คำ': ความถี่, 'คำ': ความถี่, ...}},
                           {...}]

law_with_words.pickle   : [{'เลขมาตรา': ['คำ', ...]}, {'เลขมาตรา': ['คำ', ...]}, ...]

law_words_idf.pickle    : {'คำ': idf, 'คำ': idf, ...}

law_words_tf.pickle     : [{'เลขมาตรา' : {'คำ': tf, 'คำ': tf, ...}},
                           {'เลขมาตรา' : {'คำ': tf, 'คำ': tf, ...}},
                           {...}]

words_and_freq.pickle   : {'คำ': ความถี่จากทุก doc, 'คำ': ความถี่จากทุก doc, ...}

law_words_tfidf.pickle  : [{'เลขมาตรา' : {'คำ': tfidf, 'คำ': tfidf, ...}},
                           {'เลขมาตรา' : {'คำ': tfidf, 'คำ': tfidf, ...}},
                           {...}]

law_vector.pickle       : {'เลขมาตรา'​ : [vector tfidf],
                           'เลขมาตรา'​ : [vector tfidf],
                           ...}

words_list.pickle       : [list ของคำที่เอามาทำเป็น vector]

============================================ BUG ================================================

file ที่ตัดแยกมาตรามา จำนวนมันไม่ถูกอ่ะ ยังไม่ได้เช็คด้วยมือ

============================================= 4 =================================================

cut_police_text.py  :   ตัดคำจากสำนวนออกมาเป็น list
